openapi: 3.0.2
info:
  title: 'CRUD Yatube API Documentation'
  version: ''
  description: |
    queries to API start with `/api/v1/`

    # Description
    CRUD version of web API service Yatube collects posts which can be commented and assigned to groups. Anonymous user can read posts, groups and comments. Authenticated user has all rights of an anonymous and also can create posts, update own posts, comment own and others posts, update and delete own comments

    # User Roles
    - **Anonymous** — can read (GET) posts, groups and comments
    - **Authenticated user** (`user`) — has same GET permissions as **Anonymous** and also can create (POST) posts, update (PUT & PATCH) own posts, comment (POST) own and others posts, update (PUT & PATCH) and delete (DEL) own comments

tags:
  - name: Posts
    description: Requests related to posts
  - name: Comments
    description: Requests related to comments to posts
  - name: Groups
    description: Requests related to groups
  - name: Auth
    description: Requests related AuthToken

paths:
  /api/v1/posts/:
    get:
      tags:
        - Posts
      operationId: Get posts
      description: |
        Get posts list. With limit and offset parameters response must work with pagination
      parameters:
        - name: limit
          required: false
          in: query
          description: Posts by page
          schema:
            type: integer
        - name: offset
          required: false
          in: query
          description: Page number to start response
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPost'
              examples:
                Response with pagination:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?offset=400&limit=100
                    previous: http://api.example.org/accounts/?offset=200&limit=100
                    results:
                      -
                        id: 0
                        author: string
                        text: string
                        pub_date: 2021-10-14T20:41:29.648Z
                        image: string
                        group: 0            
          description: Successful request without pagination
    post:
      tags:
        - Posts
      operationId: Create post
      description: |
        Create new publication. Anonymous requests forbidden
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Successful request
        '400':
          content:
            application/json:
              examples:
                '400':
                  value:
                    text:
                      - Required field
          description: Required field missing or invalid data passed
        '401':
          content:
            application/json:
              examples:
                '401':
                  value:
                    detail: Credentials were not provided
          description: Request from anonymous
  '/api/v1/posts/{id}/':
    get:
      tags:
        - Posts
      operationId: Get post
      description: Get post by id
      parameters:
        - name: id
          in: path
          required: true
          description: post id
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Successful request
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Page not found
          description: Post with given id not exists
    put:
      tags:
        - Posts
      operationId: Update post
      description: |
        Update post by id. Only author can update post. Anonymous requests forbidden
      parameters:
        - name: id
          in: path
          required: true
          description: post id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Successful request
        '400':
          content:
            application/json:
              examples:
                '400':
                  value:
                    text:
                      - Required field
          description: Required field missing or invalid data passed
        '401':
          content:
            application/json:
              examples:
                '401':
                  value:
                    detail: Credentials were not provided
          description: Request from anonymous
        '403':
          content:
            application/json:
              examples:
                '403':
                  value:
                    detail: Request forbidden
          description: Another's content can't be changed
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Page not found
          description: Post with given id not exists
    patch:
      tags:
        - Posts
      operationId: Partial post update
      description: |
        Partial post update by id. Only author can update post. Anonymous requests forbidden
      parameters:
        - name: id
          in: path
          required: true
          description: post id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Successful request
        '401':
          content:
            application/json:
              examples:
                '401':
                  value:
                    detail: Credentials were not provided
          description: Request from anonymous
        '403':
          content:
            application/json:
              examples:
                '403':
                  value:
                    detail: Request forbidden
          description: Another's content can't be changed
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Page not found
          description: Post with given id not exists
    delete:
      tags:
        - Posts
      operationId: Delete post
      description: |
        Delete post by id. Only author can delete post. Anonymous requests forbidden
      parameters:
        - name: id
          in: path
          required: true
          description: post id
          schema:
            type: integer
      responses:
        '204':
          description: Successful request
        '401':
          content:
            application/json:
              examples:
                '401':
                  value:
                    detail: Credentials were not provided
          description: Request from anonymous
        '403':
          content:
            application/json:
              examples:
                '403':
                  value:
                    detail: Request forbidden
          description: Another's content can't be changed
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Page not found
          description: Post with given id not exists
  '/api/v1/posts/{post_id}/comments/':
    get:
      tags:
        - Comments
      operationId: Get comments
      description: Get comment list to post
      parameters:
        - name: post_id
          in: path
          required: true
          description: post id
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: Successful request
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    {
                    "detail": "Page not found"
                    }
          description: Post with given id not exists
    post:
      tags:
        - Comments
      operationId: Create comment
      description: Create comment to post. Anonymous requests forbidden
      parameters:
        - name: post_id
          in: path
          required: true
          description: post id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Successful request
        '400':
          content:
            application/json:
              examples:
                '400':
                  value:
                    text:
                      - Required field
          description: Required field missing or invalid data passed
        '401':
          content:
            application/json:
              examples:
                '401':
                  value:
                    detail: Credentials were not provided
          description: Request from anonymous
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Page not found
          description: Post with given id not exists
  '/api/v1/posts/{post_id}/comments/{id}/':
    get:
      tags:
        - Comments
      operationId: Get comment
      description: Get comment by id
      parameters:
        - name: post_id
          in: path
          required: true
          description: post id
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: comment id
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Successful request
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Page not foud
          description: |
            Post with given id not exists or comment with given id not exists
    put:
      tags:
        - Comments
      operationId: Update comment
      description: |
        Update comment to post by id. Only author can update comment. Anonymous requests forbidden
      parameters:
        - name: post_id
          in: path
          required: true
          description: post id
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: comment id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Successful request
        '400':
          content:
            application/json:
              examples:
                '400':
                  value:
                    text:
                      - Required field
          description: Required field missing or invalid data passed
        '401':
          content:
            application/json:
              examples:
                '401':
                  value:
                    detail: Credentials were not provided
          description: Request from anonymous
        '403':
          content:
            application/json:
              examples:
                '403':
                  value:
                    detail: Request forbidden
          description: Another's content can't be changed
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Page not found
          description: |
            Post with given id not exists or comment with given id not exists
    patch:
      tags:
        - Comments
      operationId: Partial comment update
      description: |
        Partial update of a comment to post by id. Only author can update comment. Anonymous requests forbidden
      parameters:
        - name: post_id
          in: path
          required: true
          description: post id
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: comment id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Successful request
        '401':
          content:
            application/json:
              examples:
                '401':
                  value:
                    detail: Credentials were not provided
          description: Request from anonymous
        '403':
          content:
            application/json:
              examples:
                '403':
                  value:
                    detail: Request forbidden
          description: Another's content can't be changed
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Page not found
          description: |
            Post with given id not exists or comment with given id not exists
    delete:
      tags:
        - Comments
      operationId: Delete comment
      description: |
        Delete comment to post by id. Only author can delete comment. Anonymous requests forbidden
      parameters:
        - name: post_id
          in: path
          required: true
          description: post id
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: comment id
          schema:
            type: integer
      responses:
        '204':
          description: Successful request
        '401':
          content:
            application/json:
              examples:
                '401':
                  value:
                    detail: Credentials were not provided
          description: Request from anonymous
        '403':
          content:
            application/json:
              examples:
                '403':
                  value:
                    detail: Request forbidden
          description: Another's content can't be changed
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Page not found
          description: |
            Post with given id not exists or comment with given id not exists

  '/api/v1/groups/':
    get:
      tags:
        - Groups
      operationId: Get groups
      description: Get groups list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
          description: Successful request
  '/api/v1/groups/{id}/':
    get:
      tags:
        - Groups
      operationId: Get group
      description: Get group info by id
      parameters:
        - name: id
          in: path
          required: true
          description: id сообщества
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Successful request
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Page not found
          description: Group with given id not exists

  '/api/v1/api-token-auth/':
    post:
      tags:
        - Auth
      operationId: Get Authtoken
      description: Get Authtoken
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Successful request
        '400':
          content:
            application/json:
              examples:
                '400':
                  value:
                    username:
                      - Required field
                    password:
                      - Required field
          description: Required field missing or invalid data passed
        '401':
          content:
            application/json:
              examples:
                '401':
                  value:
                    detail: No active account found with the given credentials
          description: Passed credentials not exist

components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
          title: post id
          readOnly: true
        author:
          type: string
          title: user username
          readOnly: true
        text:
          type: string
          title: post text
        pub_date:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: binary
          nullable: true
        group:
          type: integer
          title: group id
          nullable: true
      required:
        - text
    GetPost:
      type: object
      properties:
        id:
          type: integer
          title: post id
          readOnly: true
        author:
          type: string
          title: user username
          readOnly: true
        text:
          type: string
          title: post текст
        pub_date:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: binary
          nullable: true
        group:
          type: integer
          title: group id
          nullable: true
    Comment:
      type: object
      properties:
        id:
          type: integer
          title: comment id
          readOnly: true
        author:
          type: string
          title: user username
          readOnly: true
        text:
          type: string
          title: comment text
        created:
          type: string
          format: date-time
          readOnly: true
        post:
          type: integer
          title: post id
          readOnly: true
      required:
        - text
    Group:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        slug:
          type: string
          maxLength: 50
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
      required:
        - title
        - slug
        - description
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
        - username
        - password
    Token:
      title: Token
      type: object
      properties:
        refresh:
          type: string
          title: refresh token
        access:
          type: string
          title: access token
